{
	"scope": "source.pawn - variable.other.pawn",
	"completions":
	[
		{ "trigger": "DJSON_ret_memcpy", "contents": "DJSON_ret_memcpy(${1:source[]}, ${2:index=0}, ${3:numbytes})" },
		{ "trigger": "DJSON_implode", "contents": "DJSON_implode(${1:c}, ${2:path_pos})" },
		{ "trigger": "DJSON_cache_init", "contents": "DJSON_cache_init()" },
		{ "trigger": "DJSON_cache_close", "contents": "DJSON_cache_close()" },
		{ "trigger": "DJSON_strreplace", "contents": "DJSON_strreplace(${1:trg[]}, ${2:newstr[]}, ${3:src[]})" },
		{ "trigger": "DJSON_sql_escape", "contents": "DJSON_sql_escape(${1:src[]})" },
		{ "trigger": "DJSON_json_escape", "contents": "DJSON_json_escape(${1:src[]})" },
		{ "trigger": "DJSON_cache_createNode", "contents": "DJSON_cache_createNode(${1:file[]}, ${2:key[]}, ${3:type_id}, ${4:value[]}, ${5:parent}, ${6:pos=-1})" },
		{ "trigger": "DJSON_cache_updateNode", "contents": "DJSON_cache_updateNode(${1:file[]}, ${2:key[]}, ${3:type_id}, ${4:value[]})" },
		{ "trigger": "DJSON_cache_createArrayNode", "contents": "DJSON_cache_createArrayNode(${1:file[]}, ${2:key[]}, ${3:parent}, ${4:pos=-1})" },
		{ "trigger": "DJSON_cache_createObjectNode", "contents": "DJSON_cache_createObjectNode(${1:file[]}, ${2:key[]}, ${3:parent}, ${4:pos=-1})" },
		{ "trigger": "DJSON_cache_createString", "contents": "DJSON_cache_createString(${1:file[]}, ${2:key[]}, ${3:value[]}, ${4:parent}, ${5:pos=-1})" },
		{ "trigger": "DJSON_cache_updateString", "contents": "DJSON_cache_updateString(${1:file[]}, ${2:key[]}, ${3:value[]})" },
		{ "trigger": "DJSON_cache_updateArrayNode", "contents": "DJSON_cache_updateArrayNode(${1:file[]}, ${2:key[]})" },
		{ "trigger": "DJSON_cache_createNumberFromStr", "contents": "DJSON_cache_createNumberFromStr(${1:file[]}, ${2:key[]}, ${3:value[]}, ${4:parent}, ${5:pos=-1})" },
		{ "trigger": "DJSON_cache_updateNumberFromStr", "contents": "DJSON_cache_updateNumberFromStr(${1:file[]}, ${2:key[]}, ${3:value[]})" },
		{ "trigger": "DJSON_cache_createNumber", "contents": "DJSON_cache_createNumber(${1:file[]}, ${2:key[]}, ${3:value}, ${4:parent}, ${5:pos=-1})" },
		{ "trigger": "DJSON_cache_updateNumber", "contents": "DJSON_cache_updateNumber(${1:file[]}, ${2:key[]}, ${3:value})" },
		{ "trigger": "DJSON_cache_putchartofile", "contents": "DJSON_cache_putchartofile(${1:File:fhnd}, ${2:stream[DJSON_MAX_STRING]}, ${3:&stream_pos}, ${4:c})" },
		{ "trigger": "DJSON_cache_putstringtofile", "contents": "DJSON_cache_putstringtofile(${1:File:fhnd}, ${2:stream[DJSON_MAX_STRING]}, ${3:&stream_pos}, ${4:str[]})" },
		{ "trigger": "DJSON_cache_debug_save_file", "contents": "DJSON_cache_debug_save_file(${1:file[]}, ${2:tofile[]})" },
		{ "trigger": "DJSON_cache_save_file_indented", "contents": "DJSON_cache_save_file_indented(${1:file[]}, ${2:tofile[]})" },
		{ "trigger": "DJSON_cache_debug_print", "contents": "DJSON_cache_debug_print()" },
		{ "trigger": "DJSON_cache_UnloadFile", "contents": "DJSON_cache_UnloadFile(${1:filename[]})" },
		{ "trigger": "DJSON_cache_IsFileCached", "contents": "DJSON_cache_IsFileCached(${1:filename[]})" },
		{ "trigger": "DJSON_cache_ReloadFile", "contents": "DJSON_cache_ReloadFile(${1:filename[]})" },
		{ "trigger": "DJSON_prepareTreeForPath", "contents": "DJSON_prepareTreeForPath(${1:file[]}, ${2:path[]})" },
		{ "trigger": "djCount", "contents": "djCount(${1:file[]}, ${2:path[]}, ${3:use_cached_value=true})" },
		{ "trigger": "djIsSet", "contents": "djIsSet(${1:file[]}, ${2:path[]}, ${3:use_cached_value=true})" },
		{ "trigger": "djUnset", "contents": "djUnset(${1:file[]}, ${2:path[]}, ${3:use_cached_value=true})" },
		{ "trigger": "djAppend", "contents": "djAppend(${1:file[]}, ${2:path[]}, ${3:value[]}, ${4:use_cached_value=true})" },
		{ "trigger": "djSet", "contents": "djSet(${1:file[]}, ${2:path[]}, ${3:new_value[]}, ${4:use_cached_value=true})" },
		{ "trigger": "djSetInt", "contents": "djSetInt(${1:file[]}, ${2:path[]}, ${3:new_value}, ${4:use_cached_value=true})" },
		{ "trigger": "djSetFloat", "contents": "djSetFloat(${1:file[]}, ${2:path[]}, ${3:Float:new_value}, ${4:use_cached_value=true})" },
		{ "trigger": "dj", "contents": "dj(${1:file[]}, ${2:path[]}, ${3:use_cached_value=true})" },
		{ "trigger": "djInt", "contents": "djInt(${1:file[]}, ${2:path[]}, ${3:use_cached_value=true})" },
		{ "trigger": "djFloat", "contents": "djFloat(${1:file[]}, ${2:path[]}, ${3:use_cached_value=true})" },
		{ "trigger": "djAutocommit", "contents": "djAutocommit(${1:toggle})" },
		{ "trigger": "djCommit", "contents": "djCommit(${1:file[]})" },
		{ "trigger": "djRevert", "contents": "djRevert(${1:file[]})" },
		{ "trigger": "djStyled", "contents": "djStyled(${1:toggle})" },
		{ "trigger": "djCreateFile", "contents": "djCreateFile(${1:file[]})" },
		{ "trigger": "djRemoveFile", "contents": "djRemoveFile(${1:file[]})" },
		"DJSON_MAX_DEPTH",
		"DJSON_MAX_STRING",
		"DJSON_RUN_TESTCASES_AT_INIT",
		"DJSON_CACHE_USE_TEMPTABLES",
		"DJSON_ALLOW_STYLED_OUTPUT",
		"DJSON_TYPE_OBJECT",
		"DJSON_TYPE_ARRAY",
		"DJSON_TYPE_NUMBER",
		"DJSON_TYPE_STRING",
		"pawn"
	]
}