{
	"scope": "source.pawn - variable.other.pawn",
	"completions":
	[
		{ "trigger": "print", "contents": "print(${1:string[]})" },
		{ "trigger": "printf", "contents": "printf(${1:format[]}, ${2:{Float,_}:...})" },
		{ "trigger": "format", "contents": "format(${1:output[]}, ${2:len}, ${3:format[]}, ${4:{Float,_}:...})" },
		{ "trigger": "SetTimer", "contents": "SetTimer(${1:funcname[]}, ${2:interval}, ${3:repeating})" },
		{ "trigger": "KillTimer", "contents": "KillTimer(${1:timerid})" },
		{ "trigger": "GetTickCount", "contents": "GetTickCount()" },
		{ "trigger": "asin", "contents": "asin(${1:Float:value})" },
		{ "trigger": "acos", "contents": "acos(${1:Float:value})" },
		{ "trigger": "atan", "contents": "atan(${1:Float:value})" },
		{ "trigger": "atan2", "contents": "atan2(${1:Float:x}, ${2:Float:y})" },
		{ "trigger": "SendChat", "contents": "SendChat(${1:msg[]})" },
		{ "trigger": "SendCommand", "contents": "SendCommand(${1:commandtext[]})" },
		{ "trigger": "GetPlayerState", "contents": "GetPlayerState(${1:playerid})" },
		{ "trigger": "GetPlayerPos", "contents": "GetPlayerPos(${1:playerid}, ${2:&Float:x}, ${3:&Float:y}, ${4:&Float:z})" },
		{ "trigger": "GetPlayerVehicleID", "contents": "GetPlayerVehicleID(${1:playerid})" },
		{ "trigger": "GetPlayerArmedWeapon", "contents": "GetPlayerArmedWeapon(${1:playerid})" },
		{ "trigger": "GetPlayerHealth", "contents": "GetPlayerHealth(${1:playerid})" },
		{ "trigger": "GetPlayerArmour", "contents": "GetPlayerArmour(${1:playerid})" },
		{ "trigger": "GetPlayerSpecialAction", "contents": "GetPlayerSpecialAction(${1:playerid})" },
		{ "trigger": "IsPlayerStreamedIn", "contents": "IsPlayerStreamedIn(${1:playerid})" },
		{ "trigger": "IsVehicleStreamedIn", "contents": "IsVehicleStreamedIn(${1:vehicleid})" },
		{ "trigger": "GetPlayerKeys", "contents": "GetPlayerKeys(${1:playerid}, ${2:&keys}, ${3:&updown}, ${4:&leftright})" },
		{ "trigger": "GetPlayerFacingAngle", "contents": "GetPlayerFacingAngle(${1:playerid}, ${2:&Float:ang})" },
		{ "trigger": "GetMyPos", "contents": "GetMyPos(${1:&Float:x}, ${2:&Float:y}, ${3:&Float:z})" },
		{ "trigger": "SetMyPos", "contents": "SetMyPos(${1:Float:x}, ${2:Float:y}, ${3:Float:z})" },
		{ "trigger": "GetMyFacingAngle", "contents": "GetMyFacingAngle(${1:&Float:ang})" },
		{ "trigger": "SetMyFacingAngle", "contents": "SetMyFacingAngle(${1:Float:ang})" },
		{ "trigger": "GetDistanceFromMeToPoint", "contents": "GetDistanceFromMeToPoint(${1:Float:X}, ${2:Float:Y}, ${3:Float:Z}, ${4:&Float:Distance})" },
		{ "trigger": "IsPlayerInRangeOfPoint", "contents": "IsPlayerInRangeOfPoint(${1:playerid}, ${2:Float:range}, ${3:Float:X}, ${4:Float:Y}, ${5:Float:Z})" },
		{ "trigger": "GetPlayerName", "contents": "GetPlayerName(${1:playerid}, ${2:name[]}, ${3:len})" },
		{ "trigger": "IsPlayerConnected", "contents": "IsPlayerConnected(${1:playerid})" },
		{ "trigger": "StartRecordingPlayback", "contents": "StartRecordingPlayback(${1:playbacktype}, ${2:recordname[]})" },
		{ "trigger": "StopRecordingPlayback", "contents": "StopRecordingPlayback()" },
		{ "trigger": "PauseRecordingPlayback", "contents": "PauseRecordingPlayback()" },
		{ "trigger": "ResumeRecordingPlayback", "contents": "ResumeRecordingPlayback()" },
		{ "trigger": "OnNPCModeInit", "contents": "OnNPCModeInit()" },
		{ "trigger": "OnNPCModeExit", "contents": "OnNPCModeExit()" },
		{ "trigger": "OnNPCConnect", "contents": "OnNPCConnect(${1:myplayerid})" },
		{ "trigger": "OnNPCDisconnect", "contents": "OnNPCDisconnect(${1:reason[]})" },
		{ "trigger": "OnNPCSpawn", "contents": "OnNPCSpawn()" },
		{ "trigger": "OnNPCEnterVehicle", "contents": "OnNPCEnterVehicle(${1:vehicleid}, ${2:seatid})" },
		{ "trigger": "OnNPCExitVehicle", "contents": "OnNPCExitVehicle()" },
		{ "trigger": "OnClientMessage", "contents": "OnClientMessage(${1:color}, ${2:text[]})" },
		{ "trigger": "OnPlayerDeath", "contents": "OnPlayerDeath(${1:playerid})" },
		{ "trigger": "OnPlayerText", "contents": "OnPlayerText(${1:playerid}, ${2:text[]})" },
		{ "trigger": "OnPlayerStreamIn", "contents": "OnPlayerStreamIn(${1:playerid})" },
		{ "trigger": "OnPlayerStreamOut", "contents": "OnPlayerStreamOut(${1:playerid})" },
		{ "trigger": "OnVehicleStreamIn", "contents": "OnVehicleStreamIn(${1:vehicleid})" },
		{ "trigger": "OnVehicleStreamOut", "contents": "OnVehicleStreamOut(${1:vehicleid})" },
		{ "trigger": "OnRecordingPlaybackEnd", "contents": "OnRecordingPlaybackEnd()" },
		"PLAYER_RECORDING_TYPE_NONE",
		"PLAYER_RECORDING_TYPE_DRIVER",
		"PLAYER_RECORDING_TYPE_ONFOOT",
		"pawn"
	]
}